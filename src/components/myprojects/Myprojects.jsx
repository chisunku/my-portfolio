import React from 'react'
import './myprojects.css'
//images
import about1 from '../../assets/about1.jpeg'
import scanIT from '../../assets/ScanIT.png'
import pantry from '../../assets/pantry.png'
import foodGeeks from '../../assets/foodGeeks.png'
import drop from '../../assets/drop.png'
import review from '../../assets/review.png'
import finance from '../../assets/finance.png'
import twitter from '../../assets/twitter.png'
import bms from '../../assets/BMS.png'

import Button from '@mui/material/Button';
import { styled } from '@mui/material/styles';
import Dialog from '@mui/material/Dialog';
import DialogTitle from '@mui/material/DialogTitle';
import DialogContent from '@mui/material/DialogContent';
import IconButton from '@mui/material/IconButton';
import CloseIcon from '@mui/icons-material/Close';
import Typography from '@mui/material/Typography';

const BootstrapDialog = styled(Dialog)(({ theme }) => ({
  '& .MuiDialogContent-root': {
    padding: theme.spacing(2),
  },
  '& .MuiDialogActions-root': {
    padding: theme.spacing(1),
  },
}));

const Myprojects = () => {

  const [open, setOpen] = React.useState(false);
  const [content, setContent] = React.useState([]);
  var data = [{
    "title" : "ScanIT",
    "description": "I am proud to have led a team of developers in creating an innovative barcode-scanning application that fundamentally transformed the shopping experience. Our app was designed to seamlessly integrate data analysis techniques and leverage OpenAI APIs, providing users with personalized product recommendations tailored to their preferences. In addition to this, we also offered features such as the ability to save favorite products, curate shopping lists, and make notes for future purchases. All these user-focused features were implemented strategically to enhance convenience and customization. I am happy to say that our approach has positively impacted the shopping landscape and set a new standard for shopping apps.",
    "Technologies": "Android Studio, Java, Firebase, Rapid APIs, OpenAI API"
  
  },{
    "title" : "SJSU pantry application ",
    "description": "I am proud to say that I led the launch of a web application tailored to offer students at SJSU seamless access to the communal pantry. By introducing this initiative, we were able to empower students to easily place orders and schedule pickup times, which helped reduce wait times and significantly improve the overall user experience. Additionally, we prioritized efficiency in inventory management for employees, and implemented Software Development Life Cycle practices, incorporating continuous integration and deployment methodologies. To ensure the success and operational excellence of the web application, we made skillful use of various technologies including NodeJS, React, Docker, OAuth, MongoDB, Kubernetes, and several AWS.",
    "Technologies": "NodeJS, ReactJS, docker, OAuth, MongoDB, Kubernetes, AWS [EC2, Route 53, DynamoDB, ELB, Lambda, CloudWatch, SNS, S3, CloudFormation, CloudFront]"
  },{
    "title" : "FoodGeeks ",
    "description": "I designed and developed a website that caters to the needs of food enthusiasts by providing them with a platform to share their visually appealing and mouth-watering blogs. The website enables users to search for restaurants based on their preferred cuisine and location, thereby enhancing their culinary experiences. In addition, the website incorporates advanced technology, such as AWS Rekognition and Rapid API, which enables users to extract image tags and find relevant recipes. The website's use of cutting-edge technology and intuitive design enables food lovers to discover new dishes and recipes, and share their culinary experiences with like-minded individuals.",
    "Technologies": "ReactJS, SpringBoot, ElasticSearch, AWS [AWS Recognition, RDS, S3, EC2, CloudWatch, SNS, Lambda, CloudFormation, CloudFront, LoadBalancers]"
  },{
    "title" : "Mini Dropbox ",
    "description": "As the lead developer, I had the pleasure of overseeing the creation of a state-of-the-art web application that provides users with a seamless and intuitive file management experience. We opted for the AWS framework, which ensured that the application is both highly scalable and consistently available, all while keeping costs to a minimum. Utilizing the latest and greatest technologies, like ReactJS and Java, we were able to design an application that is both powerful and cutting-edge.",
    "Technologies": "ReactJS, JavaScript, AWS"
  },{
    "title" : "Identifying Fake Reviews",
    "description": "I embarked on a project aimed at detecting fraudulent product reviews generated by various spamming groups. To combat this issue, I devised a sophisticated model that identifies these spammers and rectifies product ratings by eliminating the counterfeit reviews and ratings. This innovative solution was crafted using a combination of Python, MATLAB, and MySQL, ensuring the accuracy and reliability of the review system while maintaining the integrity of product evaluations.",
    "Technologies": "Python, MATLAB, MySQL"
  },{
    "title" : "Mobile News application",
    "description": "I developed a dynamic application that delivers real-time financial news updates, offering users the choice of instant mobile or email notifications. This comprehensive service included providing insights on stocks and RBI notifications. Additionally, I applied my expertise to design machine learning algorithms capable of summarizing extensive news articles into concise 60-word summaries. The technologies I harnessed for this project encompassed Android Studio, Java, and Firebase.",
    "Technologies": "Android Studios, Firebase, Java"
  },{
    "title" : "Twitter Application",
    "description": "I spearheaded the development of a user-friendly Twitter web application by seamlessly integrating Twitter APIs to elevate its functionality. I intricately designed Python API endpoints that facilitated the smooth retrieval, deletion, and posting of tweets directly on Twitter, thereby optimizing the user experience. These meticulously crafted endpoints were subsequently incorporated into a ReactJS application featuring an intuitive user interface. This project highlight a proficient combination of Python, ReactJS, and API technologies, showcasing my adeptness in harmonizing these elements to create a cohesive and enhanced user experience.",
    "Technologies": "Python, ReactJS, Twitter APIs"
  },{
    "title" : "Hostel Management",
    "description": "I initiated and executed a comprehensive project dedicated to the efficient management of B.M.S hostels, showcasing my proficiency in Java and Java-swing. As a critical part of this project, I architected an end-to-end framework meticulously designed to capture and organize all pertinent hostel-related information. This undertaking allowed for streamlined and organized hostel data management, making essential details easily accessible. Technologies utilized for this project included Java, Java-swing, and MySQL, demonstrating my adeptness in these tools.",
    "Technologies": "Java, Swing, MySQL"
  }];
  const handleClickOpen = (ind) => {
    setOpen(true);
    setContent(data[ind]);
  };
  const handleClose = () => {
    setOpen(false);
    setContent([]);
  };

  return (
    <section id='myprojects'>
      <h2>Projects</h2>

      <div className="container portfolio__container">
        <article className='portfolio__item'>
            <div className="portfolio__item-image">
                <img src={scanIT} alt="" />
            </div>
            <h3>ScanITÂ©</h3>
            <small className='text-light'>Android Studio | Java | Firebase | Rapid APIs | OpenAI API</small>
            <div className="portfolio__item-cta">
              <a href="https://github.com/chisunku/ScanIT" target="_blank" rel='noreferrer' className='btn'>Github</a>
              <a href="https://www.youtube.com/watch?v=sy4FiPKvGC0&t=1s" target="_blank" rel='noreferrer' className='btn'>Demo</a>
              <Button onClick={() => handleClickOpen(0)}>more details</Button>
            </div>
              
        </article>
        <article className='portfolio__item'>
            <div className="portfolio__item-image">
                <img src={pantry} alt="" />
            </div>
            <h3>SJSU pantry application </h3>
            <small className='text-light'>NodeJS | ReactJS | docker | OAuth | MongoDB | Kubernetes | AWS </small>
            <div className="portfolio__item-cta">
              <a href="https://github.com/chisunku/CMPE-272-well-thats-a-name" target="_blank" rel='noreferrer' className='btn'>Github</a>  
              <a href="https://youtu.be/rxEEFNdfvTU" target="_blank" rel='noreferrer' className='btn'>Demo</a>
              <Button onClick={() => handleClickOpen(1)}>more details</Button>
            </div>
        </article>
        <article className='portfolio__item'>
            <div className="portfolio__item-image">
                <img src={foodGeeks} alt="" />
            </div>
            <h3>FoodGeeks</h3>
            <small className='text-light'>ReactJS | SpringBoot | ElasticSearch | AWS</small>
            <div className="portfolio__item-cta">
              <a href="https://youtu.be/_dsiVOeylMc" target="_blank" rel='noreferrer' className='btn'>Demo</a>
              <Button onClick={() => handleClickOpen(2)}>more details</Button>  
            </div>
            
        </article>
        <article className='portfolio__item'>
            <div className="portfolio__item-image">
                <img src={drop} alt="" />
            </div>
            <h3>Mini Dropbox</h3>
            <small className='text-light'>ReactJS | SpringBoot | ElasticSearch | AWS</small>
            <div className="portfolio__item-cta">
              <a href="https://github.com/chisunku/AWS-mini_Dropbox" target="_blank" rel='noreferrer' className='btn'>Github</a>  
              <a href="https://youtu.be/xC10__KCqWY" target="_blank" rel='noreferrer' className='btn'>Demo</a>
              <Button onClick={() => handleClickOpen(3)}>more details</Button>
            </div>
            
        </article>
        <article className='portfolio__item'>
            <div className="portfolio__item-image">
                <img src={review} alt="" />
            </div>
            <h3>Identifying Fake Reviews</h3>
            <small className='text-light'>Python | MATLAB | MySQL</small>
            <div className="portfolio__item-cta">
              <Button onClick={() => handleClickOpen(4)}>more details</Button>
            </div>
            
        </article>
        <article className='portfolio__item'>
            <div className="portfolio__item-image">
                <img src={finance} alt="" />
            </div>
            <h3>Mobile News application</h3>
            <small className='text-light'>Android Studios | Firebase | Java</small>
            <div className="portfolio__item-cta">
              <Button onClick={() => handleClickOpen(5)}>more details</Button>
            </div>
            
        </article>
        <article className='portfolio__item'>
            <div className="portfolio__item-image">
                <img src={twitter} alt="" />
            </div>
            <h3>Twitter Application</h3>
            <small className='text-light'>Python | ReactJS | Twitter APIs</small>
            <div className="portfolio__item-cta">
              <Button onClick={() => handleClickOpen(5)}>more details</Button>
            </div>
            
        </article>
        <article className='portfolio__item'>
            <div className="portfolio__item-image">
                <img src={bms} alt="" />
            </div>
            <h3>Hostel Management</h3>
            <small className='text-light'>Java | Swing | MySQL</small>
            <div className="portfolio__item-cta">
              <Button onClick={() => handleClickOpen(5)}>more details</Button>
            </div>
            
        </article>
      </div>

      <BootstrapDialog
        onClose={handleClose}
        aria-labelledby="customized-dialog-title"
        open={open}
      >
        <DialogTitle sx={{ m: 0, p: 2 }} id="customized-dialog-title">
          {content['title']}
        </DialogTitle>
        <IconButton
          aria-label="close"
          onClick={handleClose}
          sx={{
            position: 'absolute',
            right: 8,
            top: 8,
            color: (theme) => theme.palette.grey[500],
          }}
        >
          <CloseIcon />
        </IconButton>
        <DialogContent dividers>
          <Typography gutterBottom>
            {content['description']}
          </Typography>
          <Typography>
            Technologies: {content['Technologies']}
          </Typography>
        </DialogContent>
      </BootstrapDialog>

    </section>
  )
}

export default Myprojects